#!/bin/sh
if [[ "$1" != "on" && "$1" != "off" ]]; then
	echo "usage: $0 on|off [keep_none]"
	return
fi
# Standalone prep
if [[ -z "$DEVICE_MODEL" ]]; then
	type get_opt >/dev/null || . /functions/opts.sh
	type eval_const >/dev/null || . /functions/core.sh
	eval_const DEVICE_MODEL
fi

dbg "$(basename $0) $@"
UDC="$(ls /sys/class/udc)" # e.g. "a800000.dwc3"
if [ -z "$UDC" ]; then
	log "No USB Device Controller available"
	exit 1
fi
GADGET=/config/usb_gadget/g1
BOUND_UDC="$(cat $GADGET/UDC)"
[ "$BOUND_UDC" ] && echo "" > $GADGET/UDC # unbind

CONFIG=$GADGET/configs/c.1
FUNCS=$GADGET/functions
F_NAME="mass_storage.0"
F_MASS_STORAGE=$FUNCS/$F_NAME

# remove this function / all active functions if "keep_none" specified as 2nd arg
[ "$2" = "keep_none" ] \
	&& rm -f $CONFIG/*.* \
	|| rm -f $CONFIG/$F_NAME

if [ "$1" = "on" ]; then
	lun0_file="$(cat $F_MASS_STORAGE/lun.0/file)"
	if [ -z "$lun0_file" ]; then
		items="@KNOWN_PARTITIONS@" # e.g. "/dev/sda:\n/dev/sdb:\n..."
		[ "$(get_opt mass_storage_rw)" = "1" ] && ro=0 || ro=1
		i=0
		for item in $items; do
			disk=${item::-1} # e.g. "/dev/sda"
			[ -e $disk ] || continue # skip non-existant devices
			lun=$F_MASS_STORAGE/lun.$i # e.g. lun.[0-6]
			mkdir -p $lun
			echo $ro > $lun/ro # 1|0
			echo $disk > $lun/file
			echo "$DEVICE_MODEL's ${disk:5}" > $lun/inquiry_string # e.g. "OnePlus 5T's sda"
			i=$(($i+1))
		done
	fi
	ln -s $F_MASS_STORAGE $CONFIG || log "Couldn't symlink $F_MASS_STORAGE"
fi

cfg="$(find $CONFIG/ -maxdepth 1 -type l -exec basename {} \; | cut -d. -f1 | sed ':a; N; $!ba; s/\n/+/g')"
echo "${cfg:-none}" > $CONFIG/strings/0x409/configuration \
	|| log "Couldn't write configration name"

if [ "$cfg" ]; then
	echo "$UDC" > $GADGET/UDC || log "Couldn't write UDC"
fi
